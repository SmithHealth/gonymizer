# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  test:
    docker:
      # specify the version
      - image: circleci/golang:1.12
        environment:
          PGUSER: circleci
          PGDATABASE: circleci
          PGPASSWORD: circleci
          PGHOST: 127.0.0.1
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_PASSWORD: circleci
          POSTGRES_USER: circleci
          POSTGRES_DB: circleci
    working_directory: /go/src/github.com/smithoss/gonymizer
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run:
          name: Install PSQL client
          command: sudo apt install -y postgresql-client curl || true
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          name: Go Linter
          command: |
            sudo chown -R circleci:circleci /go/bin
            curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.14.0
            golangci-lint run --enable gofmt
      - run:
          name: Run TestStart Golang tests
          command: |
            go test -v -covermode=atomic -coverprofile=profile.out -run TestStart
            if [[ $? -ne 0 ]]; then
              cat -n *.log
              cat -n testing/output.*
              exit 1
            else
              /bin/bash <(curl -s https://codecov.io/bash) -f profile.out
              exit 0
            fi

  deploy:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Go mod install
          command: go get -v -t -d ./...
      - run:
          name: Docker Login
          command: docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
      - run:
          name: Build Gonymizer Image
          command: |
            docker build -t $DOCKER_HUB_USER/gonymizer:$(git rev-parse HEAD) -f Dockerfile .
            docker build -t $DOCKER_HUB_USER/gonymizer:latest -f Dockerfile .
      - run:
          name: Push Docker image
          command: |
            docker push $DOCKER_HUB_USER/gonymizer:$(git rev-parse HEAD)
            docker push $DOCKER_HUB_USER/gonymizer:latest

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - test
