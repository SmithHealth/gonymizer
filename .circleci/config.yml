# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  test:
    docker:
      - image: cimg/go:1.13
        environment:
          GO111MODULE: "on"
          PGUSER: circleci
          PGDATABASE: circleci
          PGPASSWORD: circleci
          PGHOST: 127.0.0.1
      - image: cimg/postgres:13.4
        environment:
          POSTGRES_PASSWORD: circleci
          POSTGRES_USER: circleci
          POSTGRES_DB: circleci
    working_directory: /tmp/gonymizer
    steps:
      - checkout
      - run:
          name: Go Mod
          command: |
            go mod vendor
            go mod download
      - run:
          name: Install PSQL client
          command: |
            sudo apt update
            sudo apt -y install gnupg2
            wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
            echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | sudo tee  /etc/apt/sources.list.d/pgdg.list
            sudo apt update
            sudo apt install -y postgresql-client-13 curl
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          name: Go Linter
          command: |
            export BINDIR=.
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.43.0
            ./golangci-lint run --enable gofmt
      - run:
          name: Run TestStart Golang tests
          command: |
            go test -v -cover -race -coverprofile=coverage.out -run TestStart
            if [[ $? -ne 0 ]]; then
              cat -n *.log
              cat -n testing/output.*
              exit 1
            fi

  deploy:
    docker:
      - image: circleci/golang:1.13
        environment:
          GO111MODULE: "on"
    working_directory: /tmp/gonymizer
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Go Mod
          command: |
            go mod vendor
            go mod download
      - run:
          name: Docker Login
          command: echo $DOCKER_HUB_PASS | docker login -u $DOCKER_HUB_USER --password-stdin
      - run:
          name: Build Gonymizer Image
          command: |
            docker build -t $DOCKER_HUB_USER/gonymizer:$(git rev-parse HEAD) -f Dockerfile .
            docker build -t $DOCKER_HUB_USER/gonymizer:latest -f Dockerfile .
      - run:
          name: Push Docker image
          command: |
            docker push $DOCKER_HUB_USER/gonymizer:$(git rev-parse HEAD)
            docker push $DOCKER_HUB_USER/gonymizer:latest

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - test
